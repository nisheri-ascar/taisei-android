FROM ubuntu:22.04

LABEL maintainer="Alice D. <alice@starwitch.productions>"

ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive
ENV TOOLCHAIN_PREFIX=/opt/llvm-mingw
ENV TOOLCHAIN_VERSION="20220906"
ARG TOOLCHAIN_ARCHS="i686 x86_64"
ARG DEFAULT_CRT=ucrt

RUN apt-get update -qq && \
    apt-get dist-upgrade -qqy && \
    apt-get install -qqy --no-install-recommends \
    git wget bzip2 file unzip libtool pkg-config cmake build-essential \
    automake yasm gettext autopoint vim-tiny python3 python3-distutils \
    ninja-build ca-certificates curl less zip python3-docutils python3-pip \
    nsis gnupg && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install \
    meson==0.63.3 \
    ninja \
    zstandard \
    python-gnupg

WORKDIR /build

# clone a specific tag
RUN git clone --branch $TOOLCHAIN_VERSION \
	--single-branch \
	https://github.com/mstorsjo/llvm-mingw

WORKDIR /build/llvm-mingw

# Build everything that uses the llvm monorepo. We need to build the mingw runtime before the compiler-rt/libunwind/libcxxabi/libcxx runtimes.
RUN ./build-llvm.sh $TOOLCHAIN_PREFIX && \
    ./build-lldb-mi.sh $TOOLCHAIN_PREFIX && \
    ./strip-llvm.sh $TOOLCHAIN_PREFIX && \
    ./install-wrappers.sh $TOOLCHAIN_PREFIX && \
    ./build-mingw-w64.sh $TOOLCHAIN_PREFIX --with-default-msvcrt=$DEFAULT_CRT && \
    ./build-mingw-w64-tools.sh $TOOLCHAIN_PREFIX && \
    ./build-compiler-rt.sh $TOOLCHAIN_PREFIX && \
    ./build-libcxx.sh $TOOLCHAIN_PREFIX && \
    ./build-mingw-w64-libraries.sh $TOOLCHAIN_PREFIX && \
    ./build-compiler-rt.sh $TOOLCHAIN_PREFIX --build-sanitizers && \
    ./build-openmp.sh $TOOLCHAIN_PREFIX

# Build libssp
RUN ./build-libssp.sh $TOOLCHAIN_PREFIX && \
    rm -rf /build/*

ENV PATH=$TOOLCHAIN_PREFIX/bin:$PATH
